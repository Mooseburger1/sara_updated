syntax = "proto3";

option go_package = "sara_updated/backend/grpc/proto/protoauth";

import "google/protobuf/timestamp.proto";


// Encapsulates all the rquired info needed for an app to make
// a verified API call to remote services
message OauthConfigInfo{
    TokenInfo token_info = 1;
    AppCredentials app_credentials = 2;
    Scoping app_scopes = 3;
    URL redirect_url = 4;
}


// Represents the different types of tokens exchanged during an Oauth
// authentication process. There are many types of Oauth processes that
// use their own types of tokens.
message TokenInfo {
    GoogleTokenInfo google_token = 1;
}

// Represents any credentials provided by a specific platform
// When an app is registered with it for API services. For example
// in order to make an app that can communicate with Google API
// services, it must be registered in the API console on GCP.
message AppCredentials {
    GoogleAppCredentials google_app_credentials = 1;
}

// Represents the scope of capabilities and permissions an app has. Different
// platforms regulate this in different ways. For example, to restrict an app
// to only be able to Read data, but not write or delete, using Google APIs, the
// app is provided specific "scope" strings at run time that must be provided
// when making any API requests.
message Scoping {
    GoogleScoping google_scopes = 1;
}

// Represents the token returned by Google servers
// during a 3-leg OAuth2 flow
message GoogleTokenInfo {
    string access_token = 1;
    string refresh_token = 2;
    string token_type = 3;
    google.protobuf.Timestamp expiry = 4;
}

// Credentials verifying the app with Google
// servers in a 3-leg OAuth2 flow
message GoogleAppCredentials {
    string client_id = 1;
    string client_secret = 2;
}

// Scopes granting the application capabilities
// to interact with Google services on behalf
// of the user
message GoogleScoping {
    repeated string scopes = 1;
}

// URL conveys the redirect url OAuth servers need
// to complete an OAuth2.0 transaction. This is the url
// the application is redirected to after authorization
message URL {
    string url = 1;
}